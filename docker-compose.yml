version: "3.9"

networks:
  traefik_default:
    external: true

volumes:
  reform_discovery:
  reform_always_online_peer:


services:
  reform:
    build:
      dockerfile: Dockerfile-frontend
      args:
        VITE_ALWAYS_ONLINE_PEER_PROTOCOL: $VITE_ALWAYS_ONLINE_PEER_PROTOCOL
        VITE_ALWAYS_ONLINE_PEER_HOST: $VITE_ALWAYS_ONLINE_PEER_HOST
        VITE_ALWAYS_ONLINE_PEER_PORT: $VITE_ALWAYS_ONLINE_PEER_PORT
        VITE_DISCOVERY_SERVER_PROTOCOL: $VITE_DISCOVERY_SERVER_PROTOCOL
        VITE_DISCOVERY_SERVER_HOST: $VITE_DISCOVERY_SERVER_HOST
        VITE_DISCOVERY_SERVER_PORT: $VITE_DISCOVERY_SERVER_PORT
        VITE_DISCOVERY_SERVER_WEBSOCKET_PROTOCOL: $VITE_DISCOVERY_SERVER_WEBSOCKET_PROTOCOL
        VITE_DISCOVERY_SERVER_WEBSOCKET_HOST: $VITE_DISCOVERY_SERVER_WEBSOCKET_HOST
        VITE_DISCOVERY_SERVER_WEBSOCKET_PORT: $VITE_DISCOVERY_SERVER_WEBSOCKET_PORT
        VITE_TURN_SERVER_HOST: $VITE_TURN_SERVER_HOST
        VITE_TURN_SERVER_PORT: $VITE_TURN_SERVER_PORT
    volumes:
      - ./docker/templates:/etc/nginx/templates
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reform.rule=Host(`$VITE_SERVER_HOST`)"
      - "traefik.http.routers.reform.entrypoints=web-$VITE_SERVER_PORT"
    networks:
      - traefik_default
  reform-always-online-peer:
    build:
      dockerfile: Dockerfile-always-online-peer
    volumes:
      - reform_always_online_peer:/app/data
    env_file:
      - test.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reform-always-online-peer.rule=Host(`$VITE_ALWAYS_ONLINE_PEER_HOST`)"
      - "traefik.http.routers.reform-always-online-peer.entrypoints=web-$VITE_ALWAYS_ONLINE_PEER_PORT"
    networks:
      - traefik_default
  reform-discovery:
    build:
      context: https://github.com/reform-org/reform_discovery.git#deployment
    volumes:
      - reform_discovery:/app/data
    env_file:
      - test.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reform-discovery.rule=Host(`$VITE_DISCOVERY_SERVER_HOST`)"
      - "traefik.http.routers.reform-discovery.entrypoints=web-$VITE_DISCOVERY_SERVER_PORT"
      - "traefik.http.routers.reform-discovery.service=reform-discovery"
      - "traefik.http.services.reform-discovery.loadbalancer.server.port=$VITE_DISCOVERY_SERVER_PORT"
      - "traefik.http.routers.reform-discovery-ws.rule=Host(`$VITE_DISCOVERY_SERVER_WEBSOCKET_HOST`)"
      - "traefik.http.routers.reform-discovery-ws.entrypoints=web-$VITE_DISCOVERY_SERVER_WEBSOCKET_PORT"
      - "traefik.http.routers.reform-discovery-ws.service=reform-discovery-ws"
      - "traefik.http.services.reform-discovery-ws.loadbalancer.server.port=$VITE_DISCOVERY_SERVER_WEBSOCKET_PORT"
    networks:
      - traefik_default
  # https://doc.traefik.io/traefik/routing/providers/docker/
  # turnutils_uclient -t -x -y localhost
  coturn:
    image: coturn/coturn
    environment:
      - DETECT_EXTERNAL_IP=yes
      - DETECT_RELAY_IP=yes
      - DETECT_EXTERNAL_IPV6=yes
      - DETECT_RELAY_IPV6=yes
    command: "--verbose --min-port=49160 --max-port=49170 --realm=selfmade4u.de --fingerprint --no-cli --no-multicast-peers --no-tls --no-dtls --use-auth-secret --static-auth-secret=${TURN_SECRET}"
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
      - "49160-49170:49160-49170/udp"
      #labels:
      #  - "traefik.tcp.routers.coturn-3478.rule=HostSNI(`turn.localhost`)"
      #  - "traefik.tcp.routers.coturn-3478.service=coturn-3478"
      #  - "traefik.tcp.services.coturn-3478.loadbalancer.server.port=3478"
      #  - "traefik.udp.routers.coturn-3478.entrypoints=udp"
      #  - "traefik.udp.routers.coturn-3478.service=coturn-3478"
      #  - "traefik.udp.services.coturn-3478.loadbalancer.server.port=3478"

      #  - "traefik.tcp.routers.coturn-5349.rule=HostSNI(`turn.localhost`)"
      #  - "traefik.tcp.routers.coturn-5349.service=coturn-5349"
      #  - "traefik.tcp.services.coturn-5349.loadbalancer.server.port=5349"
      #  - "traefik.udp.routers.coturn-5349.entrypoints=udp"
      #  - "traefik.udp.routers.coturn-5349.service=coturn-5349"
      #  - "traefik.udp.services.coturn-5349.loadbalancer.server.port=5349"
      #networks:
      #  - traefik_default
